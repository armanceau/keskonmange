import type { VercelRequest, VercelResponse } from '@vercel/node';

export default async function handler(req: VercelRequest, res: VercelResponse) {
  const apiKey = process.env.MISTRAL_API_KEY;

  if (!apiKey) {
    return res.status(500).json({ error: "Cl√© API non trouv√©e üïµÔ∏è‚Äç‚ôÇÔ∏è" });
  }

  const { ingredients } = req.body; 

  if (!ingredients || ingredients.length === 0) {
    return res.status(400).json({ error: "Aucun ingr√©dient fourni." });
  }

  const prompt = `
    Tu es un chef cuisinier expert et un r√©dacteur francophone impeccable. 

    En te basant uniquement sur les ingr√©dients suivants : ${ingredients.join(", ")},

    propose-moi une recette simple et rapide, adapt√©e aux √©tudiants, r√©alisable en moins de 25 minutes, sans utiliser de four. 

    La recette doit √™tre claire, fluide, sans fautes de grammaire, d'orthographe ou de syntaxe, avec un style naturel et agr√©able √† lire.

    N‚Äôutilise que les ingr√©dients donn√©s, sans en ajouter d‚Äôautres sauf des √©pices et de l'huile.

    Respecte rigoureusement le format suivant, sans rien ajouter ni modifier l'ordre :

    Titre de la recette : [Titre ici]
    Temps de pr√©paration : [Temps ici, maximum 20 minutes]
    Ingr√©dients :
    - [Ingr√©dient 1 avec quantit√© approximative]
    - [Ingr√©dient 2]
    ...
    √âtapes de la pr√©paration :
    1. [√âtape 1 claire et concise]
    2. [√âtape 2]
    ...
    Astuces :
    - [Astuce 1 utile]
    - [Astuce 2]

    Ne saute aucune section, m√™me si elle est vide.

    Voici un exemple pour le style et la structure :

    Titre de la recette : Salade rapide aux tomates  
    Temps de pr√©paration : 10 minutes  
    Ingr√©dients :  
    - 3 tomates moyennes  
    - 1 cuill√®re √† soupe d'huile d'olive  
    √âtapes de la pr√©paration :  
    1. Lavez et coupez les tomates en d√©s.  
    2. M√©langez-les avec l'huile d'olive.  
    Astuces :  
    - Vous pouvez ajouter un peu de sel et de poivre pour relever le go√ªt.

    Sois rigoureux sur la qualit√© de la langue, et √©vite toute faute.

    Ne saute aucune section, m√™me si tu dois les laisser vides. N'ajoute aucun texte en dehors de ce format.
    `.trim();

  try {
    const response = await fetch('https://api.mistral.ai/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${apiKey}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        model: 'mistral-tiny',
        messages: [
          {
            role: 'system',
            content: 'Tu es un assistant culinaire amical et pr√©cis.',
          },
          {
            role: 'user',
            content: prompt,
          },
        ],
      }),
    });

    const raw = await response.text();
    console.log('R√©ponse brute de Mistral:', raw);

    let data;
    try {
      data = JSON.parse(raw);
    } catch (err) {
      return res.status(500).json({ error: 'R√©ponse Mistral non JSON', raw });
    }

    res.status(200).json({ result: data.choices[0].message.content });
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: 'Erreur lors de la requ√™te √† Mistral.' });
  }
}